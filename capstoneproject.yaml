---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: capstone-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: capstone
  template:
    metadata:
      labels:
        app: capstone
    spec:
      containers:
      - name: capstone
        image: nitinsuvagia/devopscapstonejava:1.0.0
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: capstone-service
spec:
  selector:
    app: capstone
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: capstone-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  tls:
  - hosts:
    - my-static-website.com
    secretName: myapp-tls
  rules:
  - host: my-capstone-project.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: capstone-service
            port:
              number: 80


# ##################################################################
# RUN COMMAND
# kubectl apply -f complete-static-website-kube-file.yaml
# After apply above file, run "kubectl get ingress" and wait for ADDRESS IP Assigned
# NAME                     CLASS   HOSTS                   ADDRESS        PORTS   AGE
# static-website-ingress   nginx   my-capstone-project.com 192.168.64.3   80      10m
# After IP Assigned, run "sudo vim /etc/hosts" to assign this IP to any domain name
# Add line in hosts file, like
# 192.168.64.3    my-capstone-project.com
# And, then save and quite from hosts file and browse above domain name
# ##################################################################
